{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "NoSQL",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#functionsspecial"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#strings-single-quote"
		},
		{
			"include": "#parameters"
		},
		{
			"include": "#numbers"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
                {
				"name": "keyword.control.nosql",
				"match": "(?i)\\b(INSERT|SELECT|UPDATE|DELETE|FROM|WHERE|ORDER BY|JOIN|GROUP BY|VALUE|DISTINCT|LIKE|OFFSET LIMIT)\\b"
			    },
                {
				"name": "keyword.other.nosql",
				"match": "(?i)\\b(AND|OR|NOT|IN|EXISTS)\\b"
			    },
                {
				"name": "keyword.other.nosql",
				"match": "(?i)\\b(DESC|ASC|AS)\\b"
			    }
		    ]
		},
		"constants": {
			"patterns": [
                {
                    "name": "constant.language.nosql",
                    "match": "(?i)\\b(true|false|null)\\b"
                }
				
		]
		},
		"functions": {
			"patterns": [
                {
				    "name": "entity.name.function.array.nosql",
				    "match": "(?i)\\b(ARRAY_CONCAT|ARRAY_CONTAINS|ARRAY_LENGTH|ARRAY_SLICE|CHOOSE)\\b"
			    },
                {
				    "name": "entity.name.function.math.nosql",
				    "match": "(?i)\\b(SUM|MAX|MIN|BETWEEN|ABS|EXP|SIN|ACOS|ASIN|ATAN|ATN2|CEILING|COT|DEGREES|FLOOR|LOG|LO10|PI|POWER|RADIANS|RAND|ROUND|SIGN|SQRT|SQUARE|TRUNC)\\b"
			    },
                {
				    "name": "entity.name.function.string.nosql",
				    "match": "(?i)\\b(CONCAT|CONTAINS|ENDSWITH|INDEX_OF|LEFT|LENGTH|LOWER|LTRIM|REGEXMATCH|REPLACE|REPLICATE|REVERSE|RIGHT|RTRIM|STARTSWITH|STRINGEQUALS|SUBSTRING|TRIM|UPPER|STRING_EQUALS)\\b"
			    },
                {
				    "name": "entity.name.function.geospatial.nosql",
				    "match": "(?i)\\b(ST_AREA|ST_DISTANCE|ST_INTERSECTS|ST_ISVALID|ST_ISVALIDDETAILED|ST_WITHIN)\\b"
			    },
                {
				    "name": "entity.name.function.other.nosql",
				    "match": "(?i)\\b(IS_ARRAY|IS_BOOL|IS_DEFINED|IS_FINITE_NUMBER|IS_INTEGER|IS_NULL|IS_NUMBER|IS_OBJECT|ISPRIMITIVE|IS_STRING)\\b"
			    }
			]
		},
		"functionsspecial": {
			"patterns": [
                {
                    "name": "entity.name.function.nosql",
                    "match": "(?i)\\b(COUNT|ObjectToArray|SetIntersect|SetUnion|DocumentId|StringToObject|ToString|IntAdd|IntBitAnd|IntBitLeftShift|IntBitNot|IntBitOr|IntBitRightShift|IntBitXor|IntDiv|IntMod|IntMul|IntSub|NumberBin|GetCurrentTime|GetCurrentTimeStatic|GetCurrentTicks|GetCurrentTicksStatic|GetCurrentTimeStamp|GetCurrentTimeStampStatic|DateTimeAdd|DateTimeBin|DateTimeDiff|DateTimeFromParts|DateTimePart|DateTimeToTicks|DateTimeToTimestamp|TicksToDateTime|TimestampToDateTime)\\b"
                }
				
		]
		},
		"strings": {
			"name": "string.quoted.double.nosql",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.nosql",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"name": "comment.line.double-dash.nosql",
			"begin": "--",
			"end": "$",
			"patterns": [
				{
					"name": "punctuation.definition.comment.nosql",
					"match": "--.*"
				}
			]
		},
		"blockComments": {
			"patterns": [
				{
					"begin": "/\\*",
					"end": "\\*/",
					"name": "comment.block.nosql"
				}
			]
		},
		"strings-single-quote": {
			"name": "string.quoted.single.nosql",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.nosql",
					"match": "\\\\."
				}
			]
		},
        "parameters": {
            "name": "constant.language.nosql",
            "match": "\\@\\w+"
        },
		"numbers": {
			"name": "constant.numeric.nosql",
			"match": "\\b\\d+\\b"
		  }
	},
	"scopeName": "source.nosql"
}
