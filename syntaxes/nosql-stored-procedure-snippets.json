{
    "Generic Cosmos DB Stored Procedure": {
        "prefix": "storedProcedure",
        "body": [
          "function ${1:ProcedureName}(${2:Parameters}) {",
          "\tvar collection = getContext().getCollection();",
          "\tvar collectionLink = collection.getSelfLink();",
          "\tvar count = 0;",
          "",
          "\tif (!${2:Parameters}) throw new Error('Some parameters are undefined.');",
          "",
          "\t// Your procedure logic here",
          "\t// Example: var someResult = doSomething();",
          "",
          "\t// Set the result",
          "\tgetContext().getResponse().setBody(someResult);",
          "}",
          "",
          "// Example of calling this stored procedure",
          "// var params = [ Insert parameters for the stored procedure here ];",
          "// getContext().executeStoredProc('${1:ProcedureName}', params, callback);",
          "//",
          "// function callback(err, response, options) {",
          "//   if (err) throw err;",
          "//   console.log(response);",
          "// }"
        ],
        "description": "General Cosmos DB Stored Procedure"
      },
      "Create CosmosDB Items": {
        "prefix": "createCosmosDBItems",
        "body": [
          "function ${1:ProcedureName}(items) {",
          "\tvar collection = getContext().getCollection();",
          "\tvar collectionLink = collection.getSelfLink();",
          "\tvar count = 0;",
          "",
          "\tif (!items) throw new Error('The array is undefined or null.');",
          "",
          "\tvar numItems = items.length;",
          "",
          "\tif (numItems == 0) {",
          "\t\tgetContext().getResponse().setBody(0);",
          "\t\treturn;",
          "\t}",
          "",
          "\ttryCreate(items[count], callback);",
          "",
          "\tfunction tryCreate(item, callback) {",
          "\t\tvar options = { disableAutomaticIdGeneration: false };",
          "",
          "\t\tvar isAccepted = collection.createDocument(collectionLink, item, options, callback);",
          "",
          "\t\tif (!isAccepted) getContext().getResponse().setBody(count);",
          "\t}",
          "",
          "\tfunction callback(err, item, options) {",
          "\t\tif (err) throw err;",
          "\t\tcount++;",
          "\t\tif (count >= numItems) {",
          "\t\t\tgetContext().getResponse().setBody(count);",
          "\t\t} else {",
          "\t\t\ttryCreate(items[count], callback);",
          "\t\t}",
          "\t}",
          "}",
          "// Example of calling the stored procedure",
          "// var params = [ Insert parameters for the stored procedure here ];",
          "// getContext().executeStoredProc('${1:ProcedureName}', params, callback);",
          "//",
          "// function callback(err, response, options) {",
          "//   if (err) throw err;",
          "//   console.log(response);",
          "// }"
        ],
        "description": "Create CosmosDB Items"
      }    
}